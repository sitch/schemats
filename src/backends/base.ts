import { size } from 'lodash'

import { version } from '../../package.json'
import type { BuildContext } from '../compiler'
import type { Backend } from '../config'
import type { TypeDBCoreferences } from '../coreference'
import { pad_lines, pretty } from '../formatters'

export type CommentDelimiter = string
export type IndentDelimiter = string

export interface BackendContext {
  backend: Backend
  comment: CommentDelimiter
  indent: IndentDelimiter
  coreferences: TypeDBCoreferences
}

interface ConfigLike {
  version?: string
  timestamp?: string
  command_from_cli?: string
}

const render_header_body = (config: ConfigLike = {}) =>
  `###############################################################################

  AUTO-GENERATED FILE ${config.timestamp ? `@ ${config.timestamp}` : ''} - DO NOT EDIT!

  This file was automatically generated by schemats v.${config.version || version}
  ${config.command_from_cli ? `$ ${config.command_from_cli}\n` : ''}
###############################################################################`

export const render_autogenerated_banner = (comment: string, config?: ConfigLike) =>
  pad_lines(render_header_body(config), comment)

export const header = ({ config }: BuildContext, { comment }: BackendContext) => {
  if (!config.writeHeader) {
    return ''
  }
  return render_autogenerated_banner(comment, config)
}

export const coreference_banner = (
  _context: BuildContext,
  { comment, indent, coreferences: { all, error, warning } }: BackendContext,
) => {
  if (size(all) === 0) {
    return ''
  }
  return pad_lines(
    `###############################################################################
  ⛔ CRITICAL ⛔ - (${size(error)}) - Attribute Conflicts
###############################################################################
${pad_lines(pretty(error), indent)}
===============================================================================
  ⚠️ WARNING ⚠️ - (${size(warning)}) - UDT Conflicts
===============================================================================
${pad_lines(pretty(warning), indent)}
-------------------------------------------------------------------------------
  ❎ INFO ❎ - (${size(all)}) - Attribute Overlaps
-------------------------------------------------------------------------------
${pad_lines(pretty(all), indent)}
###############################################################################`,
    comment,
  )
}
